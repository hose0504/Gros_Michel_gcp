name: Terraform GCP CI/CD

on:
  push:
    branches: ["main"]
    paths: ["**"]

jobs:
  terraform-apply:
    if: contains(github.event.head_commit.message, 'apply')
    runs-on: ubuntu-latest
    timeout-minutes: 50

    env:
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_region: ${{ secrets.GCP_REGION }}
      TF_VAR_zone: ${{ secrets.GCP_ZONE }}
      TF_VAR_gcp_credentials: ${{ secrets.GOOGLE_CREDENTIALS }}
      TF_VAR_ssh_pub_key: ${{ secrets.SSH_PUB_KEY_PATH }}
      SA_KEY_JSON: ${{ secrets.SA_KEY_JSON }}

    defaults:
      run:
        working-directory: gcp

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Generate user-data.template with embedded SA key
        run: |
          mkdir -p gcp
          cat <<EOF > gcp/user-data.template
#!/bin/bash

apt update -y && apt upgrade -y
apt install -y openjdk-17-jdk awscli apt-transport-https ca-certificates gnupg curl sudo lsb-release wget

curl -LO "https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl"
chmod +x kubectl
mv kubectl /usr/local/bin/

echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee /etc/apt/sources.list.d/google-cloud-sdk.list
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
apt update -y && apt install -y google-cloud-sdk

# 서비스 계정 키 삽입
echo '${{ secrets.SA_KEY_JSON }}' > /home/wish/terraform-sa.json

CLUSTER_NAME="gros-michel-gke-cluster"
REGION="us-central1"
PROJECT="skillful-cortex-463200-a7"

until [ "$(gcloud container clusters describe $CLUSTER_NAME --region $REGION --project $PROJECT --format='value(status)')" = "RUNNING" ]; do
  echo "아직 준비되지 않음. 10초 후 재시도..."
  sleep 10
done

gcloud auth activate-service-account --key-file=/home/wish/terraform-sa.json
gcloud config set project $PROJECT
gcloud container clusters get-credentials $CLUSTER_NAME --region $REGION --project $PROJECT

curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
helm repo add argo https://argoproj.github.io/argo-helm
helm repo update
helm install argocd argo/argo-cd -n argocd --create-namespace

useradd -r -m -U -d /opt/tomcat -s /usr/sbin/nologin tomcat

TOM_VER="11.0.8"
wget -O /tmp/tomcat.tar.gz https://dlcdn.apache.org/tomcat/tomcat-11/v$TOM_VER/bin/apache-tomcat-$TOM_VER.tar.gz
mkdir -p /opt/tomcat
tar -xf /tmp/tomcat.tar.gz -C /opt/tomcat/
mv /opt/tomcat/apache-tomcat-$TOM_VER /opt/tomcat/tomcat-11
chown -RH tomcat:tomcat /opt/tomcat/tomcat-11

cat <<EOT2 > /etc/systemd/system/tomcat.service
[Unit]
Description=Apache Tomcat 11
After=network.target

[Service]
Type=forking
User=tomcat
Group=tomcat
Environment="JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
Environment="CATALINA_HOME=/opt/tomcat/tomcat-11"
Environment="CATALINA_BASE=/opt/tomcat/tomcat-11"
Environment="CATALINA_PID=/opt/tomcat/tomcat-11/temp/tomcat.pid"
Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
ExecStart=/opt/tomcat/tomcat-11/bin/startup.sh
ExecStop=/opt/tomcat/tomcat-11/bin/shutdown.sh
Restart=always

[Install]
WantedBy=multi-user.target
EOT2

systemctl daemon-reload
systemctl start tomcat
systemctl enable tomcat

curl -o /home/wish/app-helm.yaml https://raw.githubusercontent.com/wish4o/grosmichel/main/gcp/helm/static-site/templates/app-helm.yaml
kubectl apply -f /home/wish/app-helm.yaml || true
EOF

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars"

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars"

  terraform-destroy:
    if: contains(github.event.head_commit.message, 'destroy')
    runs-on: ubuntu-latest
    timeout-minutes: 50

    env:
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_region: ${{ secrets.GCP_REGION }}
      TF_VAR_zone: ${{ secrets.GCP_ZONE }}
      TF_VAR_gcp_credentials: ${{ secrets.GOOGLE_CREDENTIALS }}
      TF_VAR_ssh_pub_key: ${{ secrets.SSH_PUB_KEY_PATH }}

    defaults:
      run:
        working-directory: gcp

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var-file="terraform.tfvars"

  no-action:
    if: >
      !contains(github.event.head_commit.message, 'apply') &&
      !contains(github.event.head_commit.message, 'destroy')
    runs-on: ubuntu-latest
    steps:
      - name: No action triggered
        run: echo "No apply/destroy keyword. Workflow skipped."
