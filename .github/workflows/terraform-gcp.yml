name: Terraform GCP CI/CD

on:
  push:
    branches: ["main"]
    paths: ["**"]

env:
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_region: ${{ secrets.GCP_REGION }}
  TF_VAR_zone: ${{ secrets.GCP_ZONE }}
  TF_VAR_gcp_credentials: ${{ secrets.GOOGLE_CREDENTIALS }}
  TF_VAR_ssh_pub_key: ${{ secrets.SSH_PUB_KEY_PATH }}
  gke_cluster_name: gros-michel-gke-cluster

jobs:
  terraform-apply:
    if: contains(github.event.head_commit.message, 'apply')
    runs-on: ubuntu-latest
    timeout-minutes: 50

    defaults:
      run:
        working-directory: gcp

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Authenticate to Google Cloud and Install gcloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up gcloud CLI and gke-gcloud-auth-plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Copy startup.sh → user-data.template
        run: cp modules/instance/startup.sh modules/instance/user-data.template

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars"

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars"

      - name: Get Terraform Output - Ingress IP Name # 수정된 부분: tr -d '\n' 추가
        id: get_ip_name
        run: |
          # Terraform output에서 고정 IP 리소스 이름을 가져와 변수에 저장하고 줄바꿈 문자 제거
          INGRESS_IP_NAME=$(terraform output -raw ingress_ip_name | tr -d '\n')
          # GITHUB_OUTPUT 파일에 변수 값을 올바른 형식으로 작성
          echo "INGRESS_IP_NAME=$INGRESS_IP_NAME" >> "$GITHUB_OUTPUT"

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials ${{ env.gke_cluster_name }} \
            --region ${{ env.TF_VAR_region }} \
            --project ${{ env.TF_VAR_project_id }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.1

      - name: Install Ingress NGINX with Static IP
        run: |
          helm upgrade --install ingress-nginx ingress-nginx \
            --repo https://kubernetes.github.io/ingress-nginx \
            --namespace ingress-nginx --create-namespace \
            --set controller.service.annotations."cloud\.google\.com/load-balancer-type"="External" \
            --set controller.service.annotations."cloud\.google\.com/load-balancer-ipv4-address"="${{ steps.get_ip_name.outputs.INGRESS_IP_NAME }}"

  terraform-destroy:
    if: contains(github.event.head_commit.message, 'destroy')
    runs-on: ubuntu-latest
    timeout-minutes: 50

    defaults:
      run:
        working-directory: gcp

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Authenticate to Google Cloud and Install gcloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var-file="terraform.tfvars"

  no-action:
    if: "!contains(github.event.head_commit.message, 'apply') && !contains(github.event.head_commit.message, 'destroy')"
    runs-on: ubuntu-latest
    steps:
      - name: No action triggered
        run: echo "No 'apply' or 'destroy' in commit message. Skipping."
